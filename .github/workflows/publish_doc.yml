name: Publish documentation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work
    # equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install Doxygen
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends doxygen graphviz

        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        # DCMAKE_C_COMPILER avoids https://github.com/conan-io/conan/issues/4322
      - name: CMake configuration
        run: |
          cmake -B ${{github.workspace}}/build

      - name: Doxygen documentation generation
        working-directory: ${{github.workspace}}/build
        run: |
          make doc

      - name: Documentation moving generated files
        run: |
          cd ${{github.workspace}}/build/doc/html && ls
          cd ../../../ && ls
          mv ${{github.workspace}}/build/doc/html ./public
          cd ./public && ls

      - name: Documentation deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
